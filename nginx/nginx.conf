user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;

	server {
     	#HTTPS的默认访问端口443。
   		#如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
        listen 443 ssl;

        #填写证书绑定的域名
        server_name shimanongfu.cn;

        #填写证书文件绝对路径
        ssl_certificate cert/shimanongfu.cn_bundle.pem;
        #填写证书私钥文件绝对路径
        ssl_certificate_key cert/shimanongfu.cn.key;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;

        #自定义设置使用的TLS协议的类型以及加密套件（以下为配置示例，请您自行评估是否需要配置）
        #TLS协议版本越高，HTTPS通信的安全性越高，但是相较于低版本TLS协议，高版本TLS协议对浏览器的兼容性较差。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

        #表示优先使用服务端加密套件。默认开启
        ssl_prefer_server_ciphers on;

		charset utf-8;

        location / {
            root /var/www;
            index index.html;
            try_files $uri $uri/ $uri.html =404;
            charset utf-8;
        }


	 	#location ~ ^/api/wx/(.*) {
                #	 proxy_pass  http://119.91.62.85:8081/$1?$args;
                #        proxy_set_header Host $host;
                #        proxy_set_header X-Real-IP $remote_addr;
                #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                #        proxy_set_header X-Forwarded-Proto $scheme;
                #}

		#location ~ /api/wx/ {
                #        proxy_pass  http://119.91.62.85:8081;
                #        proxy_set_header Host $host;
                #        proxy_set_header X-Real-IP $remote_addr;
                #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                #        proxy_set_header X-Forwarded-Proto $scheme;
                #}

	}

	server {
		server_name shimanongfu.cn;
		listen 80;

		rewrite ^(.*)$ https://$host$1;

	}

	server {
        #HTTPS的默认访问端口443。
        #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
        listen 443 ssl;

        #填写证书绑定的域名
        server_name git.shimanongfu.cn;

        #填写证书文件绝对路径
        ssl_certificate git_cert/git.shimanongfu.cn_bundle.pem;
        #填写证书私钥文件绝对路径
        ssl_certificate_key git_cert/git.shimanongfu.cn.key;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;

        #自定义设置使用的TLS协议的类型以及加密套件（以下为配置示例，请您自行评估是否需要配置）
        #TLS协议版本越高，HTTPS通信的安全性越高，但是相较于低版本TLS协议，高版本TLS协议对浏览器的兼容性较差。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

        #表示优先使用服务端加密套件。默认开启
        ssl_prefer_server_ciphers on;

        charset utf-8;

        location / {
            proxy_pass  http://localhost:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
			charset utf-8;
        }

    }

	server {
        server_name git.shimanongfu.cn;
        listen 80;

		rewrite ^(.*)$ https://$host$1;
    }
}
